#!/usr/bin/zsh

show_dmenu () {
  local dmenu_config='-fn Inconsolata-16:regular -l 20 -x 400 -y 250 -w 1120 -dim 0.5 -i'

  local prompt=$1
  shift

  if [[ $prompt == 'mask' ]]; then
    dmenu_config+=' -mask'
    prompt=$1
    shift
  fi

  printf '%s\n' "$@" | dmenu $( echo $dmenu_config ) -p $prompt
}

find_bluetooth () {
  local adapter_line=$( rfkill | grep 'dell-bluetooth' )
  local adapter_status=$( echo $adapter_line | grep -e '\sblocked' )

  bluetooth_adapter_id=$( echo $adapter_line | cut -f 2 -d ' ' )

  if [[ $adapter_status == '' ]]; then
    bluetooth_status='enabled -- disable'
  else
    bluetooth_status='disabled -- enable'
  fi
}

find_wifi () {
  local adapter_line=$( nmcli dev status | grep '^wlp3s0' )
  local adapter_status=$( echo $adapter_line | sed -r 's/ {2,}/:/g' | cut -f 3 -d ':' )

  ssid=$( echo $adapter_line | sed -r 's/ {2,}/:/g' | cut -f 4 -d ':' | sed 's/ *$//' )

  if [[ $adapter_status == 'connected' ]]; then
    wifi_status="connected to $ssid -- disconnect"
  else
    wifi_status='not connected'
  fi
}

toggle_bluetooth () {
  rfkill toggle $bluetooth_adapter_id
}

disconnect_wifi () {
  nmcli con down $ssid
}

find_networks () {
  local networks=$( nmcli dev wifi list )

  wifi_networks=()

  for line in "${(f)networks}"; do
    if ! [[ $line =~ '^IN-USE' ]]; then
      local connected=$( echo $line | grep '^\*' )
      local connection=$( echo $line | sed -r 's/\*? +[A-F0-9:]* +//' | sed -r 's/ {2,}/:/g' )
      local ssid=$( echo $connection | cut -f 1 -d ':' )

      if ! [[ $ssid == '--' ]]; then
        local network="$ssid  $( echo $connection | cut -f 4 -d ':' )"
        local security=$( echo $connection | cut -f 7 -d ':' )

        if ! [[ $security == '--' ]]; then network+="  $security"; fi
        if [[ $connected == '' ]]; then
          network+=' -- connect'
        else
          network+=' -- disconnect'
        fi

        wifi_networks+=(${network})
      fi
    fi
  done
}

top_menu_router () {
  if [[ $1 =~ '^Bluetooth' ]]; then
    toggle_bluetooth
  elif [[ $1 =~ 'disconnect$' ]]; then
    disconnect_wifi
  elif [[ $1 =~ '^Show available wifi networks$' ]]; then
    find_networks
    wifi_menu
  fi
}

wifi_menu_router () {
  local line=$( echo $1 | sed -r 's/( -- | {2,})/:/g' )
  local action=$( echo $line | sed -r 's/.*:((dis)?connect)$/\1/' )

  ssid=$( echo $line | cut -f 1 -d ':' )

  echo $( nmcli con show )
  if [[ $action == 'disconnect' ]]; then
    disconnect_wifi
  elif [[ $( nmcli con show | grep $ssid ) == '' && $( echo $line | cut -f 3 -d ':' ) == 'WPA2' ]]; then
    password=$( show_dmenu 'mask' 'Enter password' )
    nmcli dev wifi connect $ssid password $password
  else
    nmcli dev wifi connect $ssid
  fi
}

top_menu () {
  local bluetooth="Bluetooth $bluetooth_status"
  local wifi="Wifi $wifi_status" 
  local selection=$( show_dmenu 'Network' $bluetooth $wifi 'Show available wifi networks' )

  top_menu_router $selection
}

wifi_menu () {
  local selection=$( show_dmenu 'Wifi Networks' $wifi_networks )

  wifi_menu_router $selection
}

find_bluetooth
find_wifi
top_menu
