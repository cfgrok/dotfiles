# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME=powerlevel10k/powerlevel10k

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

HIST_IGNORE_SPACE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(autojump colored-man-pages dirhistory git git-extras git-patch sudo ubuntu vagrant web-search zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# ls + solarized
if [ -f ~/.dircolors ]; then
  eval `dircolors ~/.dircolors`
fi

# Color support for vim
export TERM='xterm-256color'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# Initialize fzf if present
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Add rbenv to PATH & initialize
export PATH="$HOME/.rbenv/bin:$HOME/.local/bin:$PATH"
eval "$(rbenv init -)"

# Custom function to swap names of 2 files
function swap() { mv "$1" "$1".tmp && mv "$2" "$1" && mv "$1".tmp "$2" }

#Custom function to pipe stdout & stderr both to the screen and a log file
function cmdlog() { ( echo "${@:2}" && "${@:2}" ) |& tee -a "$1" ;}

# Set preferred text editor
export EDITOR="vim"
export VISUAL="vim"

# This loads nvm
export NVM_DIR="/home/ezra/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

# When ready to move to Neovim, uncomment to alias 'vi' and 'vim' to nvim
# alias vi=nvim
# alias vim=nvim
# alias ex=nvim
# alias view=nvim
# alias gvim=nvim
# alias gview=nvim
# alias evim=nvim
# alias eview=nvim
# alias rvim=nvim
# alias rview=nvim
# alias rgvim=nvim
# alias rgview=nvim

# Neovim configuration and data directories
export VIMCONFIG="$HOME/.config/nvim"
export VIMDATA="$HOME/.local/share/nvim"

# Prevent opening nested Neovim editor inside Terminal mode, use nvr to execute command if available
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  if [ -x "$(command -v nvr)" ]; then
    alias nvim=nvr
    export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
  else
    alias nvim='echo "No nesting!"'
  fi
fi
