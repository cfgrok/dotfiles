---
- name: Set up EULA response for MS fonts
  ansible.builtin.debconf:
    name: ttf-mscorefonts-installer
    question: msttcorefonts/accepted-mscorefonts-eula
    vtype: boolean
    value: "true"
  become: true

# TODO: possible additional packages
# apache
# build-essential
# darktable
# dunst
# fzf
# gcolor3
# gh
# kopia
# lolcat
# mkchromecast
# libsqlite-dev
# lsb-release
# jq
# obsidian
# openjdk
# pandoc
# python3-neovim
# python3-pip
# python3-venv
# sqlite
# sqlite-doc
# syncthing
# tlp
# vim-tiny
# vorta
# wezterm
# wget
# workrave
- name: Install standard packages
  ansible.builtin.apt:
    name:
      - abcde
      - audacity
      - autojump
      - dconf-editor
      - exuberant-ctags
      - fd-find
      - ffmpeg
      - fonts-inconsolata
      - gimp
      - git-extras
      - gnome-gmail
      - gnome-nettool
      - htop
      - keepassxc
      - meld
      - mint-backgrounds-uma
      - nethogs
      - nfs-common
      - nmap
      - peek
      - playerctl
      - ripgrep
      - screenkey
      - ssh-askpass-gnome
      - simplescreenrecorder
      - taskwarrior
      - tree
      - ubuntu-restricted-extras
      - vagrant
      - virtualbox
      - vlc
    update_cache: true
  become: true

- name: Set askpass path in sudo.conf
  ansible.builtin.lineinfile:
    path: /etc/sudo.conf
    line: Path askpass /usr/bin/ssh-askpass
    insertafter: "#Path askpass"
  become: true

- name: Correct autojump data_home path -- step 1
  ansible.builtin.replace:
    path: /usr/share/autojump/autojump
    regexp: ',\n +''autojump''\)\)'
    replace: '))'
  become: true

- name: Correct autojump data_home path -- step 2
  ansible.builtin.replace:
    path: /usr/share/autojump/autojump
    regexp: "data_home, 'autojump.txt"
    replace: "data_home, 'autojump', 'autojump.txt"
  become: true

- name: Fix missing defaults error when launching vim-tiny
  ansible.builtin.file:
    path: /usr/share/vim/vim82/defaults.vim
    state: touch
  become: true

- name: Symlink rg config files
  ansible.builtin.file:
    src: "{{ playbook_dir }}/files/{{ item }}"
    path: "~/.config/rg/{{ item }}"
    state: link
  loop:
    - rgignore
    - rgrc

- name: Symlink fd ignore file
  ansible.builtin.file:
    src: "{{ playbook_dir }}/files/fdignore"
    path: ~/.fdignore
    state: link

- name: Launch Firefox to create profile directory
  ansible.builtin.command:
    cmd: firefox

- name: Find Firefox profile directory
  ansible.builtin.find:
    paths: ~/.mozilla/firefox
    file_type: directory
    patterns: '*default-release'
  register: firefox_directory

- name: Download arkenfox user.js file to Firefox profile directory
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/arkenfox/user.js/master/user.js
    dest: "{{ firefox_directory.files[0].path }}/user.js"

- name: Download arkenfox scripts to Firefox profile directory
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/arkenfox/user.js/master/{{ item }}"
    dest: "{{ firefox_directory.files[0].path }}/{{ item }}"
    mode: "0775"
  loop:
    - prefsCleaner.sh
    - updater.sh

- name: Copy user-overrides.js to Firefox profile directory
  ansible.builtin.copy:
    src: files/user-overrides.js
    dest: "{{ firefox_directory.files[0].path }}/user-overrides.js"

- name: Run arkenfox update script
  ansible.builtin.shell:
    cmd: ./updater.sh -su
    chdir: "{{ firefox_directory.files[0].path }}"

- name: Copy Firefox policies file
  ansible.builtin.copy:
    src: files/policies.json
    dest: /usr/lib/firefox/distribution/policies.json
    owner: root
    group: root
    mode: "0644"
  become: true
